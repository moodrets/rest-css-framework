@mixin breakpoint-up($name, $size) {
	@if ($name == 'xs') {
		@content;
	} @else {
		@media (#{$media-width}-width: $size) {
			@content;
		}
	}
}

@mixin set-property($map){
  @each $key, $value in $map {
    #{$key} : #{$value};
  }
}

@mixin set-button-types($map){
  @each $type, $props in $map {
    &-#{$type} {
      @include set-property(map-deep-get($props, default));
      &:hover {@include set-property(map-deep-get($props, hover));}
      &:focus {@include set-property(map-deep-get($props, focus));}
      &:active {@include set-property(map-deep-get($props, active));}
    }
  }
}

@mixin font-face($name, $path, $weight: normal, $style: normal, $display: swap) {
  @font-face {
    font-family: $name;
    font-weight: $weight;
    font-style: $style;
    font-display: $display;
    src: url("#{$font-path}#{$path}.woff2") format("woff2"), url("#{$font-path}#{$path}.woff") format("woff");
  }
}

@mixin apply-states($modifier, $br-name: '') {
  $modifier-type: if($modifier, '-'+$modifier, '');
  &#{$modifier-type}\:#{$hover-class}:hover#{$br-name} {@content;}
  &#{$modifier-type}\:#{$focus-class}:focus#{$br-name} {@content;}
  &#{$modifier-type}\:#{$focus-visible-class}:focus-visible#{$br-name} {@content;}
  &#{$modifier-type}\:#{$focus-within-class}:focus-within#{$br-name} {@content;}
  &#{$modifier-type}\:#{$active-class}:active#{$br-name} {@content;}
  &#{$modifier-type}\:#{$active-state-class}.#{$active-state-class}#{$br-name} {@content;}
}

@mixin apply-other-props($prop, $br-name: '') {
  &-#{$current-class}#{$br-name} {#{$prop}: currentColor;}
  &-#{$transparent-class}#{$br-name} {#{$prop}: transparent;}
  &-#{$inherit-class}#{$br-name} {#{$prop}: inherit;}
}

@mixin button-reset {
  outline: none;
  border: none;
  line-height: normal;
  text-decoration: none;
  border: none;
  background: none;
  padding: 0;
}

@mixin list-reset($m: 0, $p: 0) {
  margin: $m;
  padding: $p;
  list-style: none;
}
