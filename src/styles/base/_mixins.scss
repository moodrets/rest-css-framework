@mixin font-face($name, $path, $weight: normal, $style: normal, $display: swap) {
  @font-face {
    font-family: $name;
    font-weight: $weight;
    font-style: $style;
    font-display: $display;
    src: url("#{$font-path}#{$path}.woff2") format("woff2"), url("#{$font-path}#{$path}.woff") format("woff");
  }
}

@mixin breakpoint-up($name, $size) {
	@if ($name == 'xs') {
		@content;
	} @else {
		@media (#{$media-width}-width: $size) {
			@content;
		}
	}
}

@mixin apply-utility-content($utility, $br-name: ''){
  $prefix: if(map-get($utility, prefix), map-get($utility, prefix), map-get($global, prefix));
  $important: if(map-get($global, important) or map-get($utility, important), !important, '');
  $child-selector: if(map-get($utility, child), map-get($utility, child), '');

  @each $key, $value in map-get($utility, values) {
    $key-type: if($key == '' or $key == null, '', '-#{$key}');
    @each $prop, $prop-value in map-get($utility, properties) {
      $iterable-object: if($prop-value, $prop-value, $value);
      @if (not map-get($utility, only-pseudo)) {
        .#{$prefix}#{$prop}#{$key-type}#{$br-name} #{$child-selector} {
          @each $item, $subvalue in $iterable-object {
            $css-prop: if($subvalue, $subvalue, $value);
            #{$item}: $css-prop #{$important}
          }
        }
      }
      @if (map-get($utility, pseudo)) {
        @each $state, $pseudo in map-get($utility, pseudo) {
          $group-selector: if(str-index($state, 'group'), '.#{$state}', '');
          $pseudo-type: if(str-index($state, 'group'), '', $pseudo);
          $state: if(str-index($state, 'group'), $pseudo, $state);
          #{$group-selector} .#{$prefix}#{$prop}#{$key-type}\:#{$state}#{$pseudo-type}#{$br-name} #{$child-selector} {
            @each $item, $subvalue in $iterable-object {
              $css-prop: if($subvalue, $subvalue, $value);
              #{$item}: $css-prop #{$important}
            }
          }
        }
      }
    }
  }

  @if (map-get($utility, inherit)) {
    $first-prop-key: nth(nth(map-get($utility, properties), 1), 1);
    $first-prop-value: nth(nth(map-get($utility, properties), 1), 2);
    $inherit-class: if(map-get($utility, inherit-class), map-get($utility, inherit-class), 'inh');
    .#{$prefix}#{$first-prop-key}-#{$inherit-class}#{$br-name} #{$child-selector} {
      @each $item in $first-prop-value {
        #{$item}: inherit #{$important}
      }
    }
  }
}

@mixin apply-utility($utility) {
  @if (map-get($utility, responsive)) {
    @each $name, $size in $breakpoint-list {
      @include breakpoint-up($name, $size) {
        $br-name: breakpoint-infix($name);
        @include apply-utility-content($utility, $br-name);
      }
    }
  } @else {
    @include apply-utility-content($utility);
  }
}
