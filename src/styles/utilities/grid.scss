@mixin create-grid(
  $grid-row-class: $grid-row-class,
  $grid-row-equal-height-class: $grid-row-equal-height-class,
  $grid-row-columns-class: $grid-row-columns-class,
  $grid-column-class: $grid-column-class,
  $grid-column-auto-class: $grid-column-auto-class,
  $grid-column-offset-class: $grid-column-offset-class,
  $grid-gap-class: $grid-gap-class,
  $grid-no-gap-class: $grid-no-gap-class,
  $grid-no-gap-bottom-class: $grid-no-gap-bottom-class,
  $grid-column-count: $grid-column-count,
  $grid-gap: $grid-gap,
  $grid-gap-sm: $grid-gap-sm,
  $grid-gap-md: $grid-gap-md,
  $grid-gap-lg: $grid-gap-lg,
  $grid-gap-xl: $grid-gap-xl,
) {
  .#{$grid-row-class} {
    display: flex;
    flex-wrap: wrap;
    margin-left: calc(#{$grid-gap} * -1);
  }

  .#{$grid-column-class} {
    max-width: 100%;
    flex-basis: 0;
    flex-grow: 1;
    padding-left: $grid-gap;
    padding-bottom: $grid-gap;
  }

  @each $name, $size in $breakpoints {
    @include breakpoint-up($name, $size) {
      $br-name: breakpoint-infix($name);

      .#{$grid-row-class}.#{$grid-row-equal-height-class}#{$br-name} {
        > [class*='#{$grid-column-class}'] > * {
          height: 100%;
        }
      }

      .#{$grid-row-class}.#{$grid-gap-class}-#{$size-small-class}#{$br-name} {
        margin-left: calc(#{$grid-gap-sm} * -1);
        > [class*='#{$grid-column-class}'] {
          padding-left: #{$grid-gap-sm};
          padding-bottom: #{$grid-gap-sm};
        }
      }

      .#{$grid-row-class}.#{$grid-gap-class}-#{$size-medium-class}#{$br-name} {
        margin-left: calc(#{$grid-gap-md} * -1);
        > [class*='#{$grid-column-class}'] {
          padding-left: #{$grid-gap-md};
          padding-bottom: #{$grid-gap-md};
        }
      }

      .#{$grid-row-class}.#{$grid-gap-class}-#{$size-large-class}#{$br-name} {
        margin-left: calc(#{$grid-gap-lg} * -1);
        > [class*='#{$grid-column-class}'] {
          padding-left: #{$grid-gap-lg};
          padding-bottom: #{$grid-gap-lg};
        }
      }

      .#{$grid-row-class}.#{$grid-gap-class}-#{$size-extra-large-class}#{$br-name} {
        margin-left: calc(#{$grid-gap-xl} * -1);
        > [class*='#{$grid-column-class}'] {
          padding-left: #{$grid-gap-xl};
          padding-bottom: #{$grid-gap-xl};
        }
      }

      .#{$grid-row-class}.#{$grid-no-gap-class}#{$br-name} {
        margin-left: 0;
        > [class*='#{$grid-column-class}'] {
          padding: 0;
        }
      }

      .#{$grid-row-class}.#{$grid-no-gap-bottom-class}#{$br-name} {
        > [class*='#{$grid-column-class}'] {
          padding-bottom: 0;
        }
      }

      @for $i from 1 through $grid-column-count {
        .#{$grid-row-class}.#{$grid-row-columns-class}-#{$i}#{$br-name} {
          > [class*='#{$grid-column-class}'] {
            flex-basis: calc(100% / #{$i});
            max-width: calc(100% / #{$i});
          }
        }
      }

      @for $i from 1 through $grid-column-count {
        .#{$grid-column-class}-#{$i}#{$br-name} {
          flex-basis: calc(100% * #{$i} / #{$grid-column-count}) !important;
          max-width: calc(100% * #{$i} / #{$grid-column-count}) !important;
        }
      }

      .#{$grid-column-class}-#{$grid-column-auto-class}#{$br-name} {
        flex-basis: 0 !important;
        flex-grow: 1 !important;
        max-width: 100% !important;
      }

      @for $i from 1 through $grid-column-count {
        .#{$grid-column-offset-class}-#{$i}#{$br-name} {
          margin-left: calc(100% * #{$i} / #{$grid-column-count});
        }
      }

      .#{$grid-column-offset-class}-0#{$br-name} {
        margin-left: 0;
      }
    }
  }
}

@include create-grid();
