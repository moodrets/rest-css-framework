// columns
.#{$row-column-prefix-class} {
  max-width: 100%;
  flex-basis: 0;
  flex-grow: 1;

  @each $name, $size in $breakpoint-list {
    @include breakpoint-up($name, $size) {
      $br-name: breakpoint-infix($name);

      @for $i from 1 through $row-column-count {
        &-#{$i}#{$br-name} {
          flex-basis: calc(100% * #{$i} / #{$row-column-count}) !important;
          max-width: calc(100% * #{$i} / #{$row-column-count}) !important;
        }
        &-#{$auto-class}#{$br-name} {
          flex-basis: 0 !important;
          flex-grow: 1 !important;
          max-width: 100% !important;
        }
        &-#{$row-column-offset-class}-#{$i}#{$br-name} {
          margin-left: calc(100% * #{$i} / #{$row-column-count});
        }
      }
      &-#{$row-column-offset-class}-0#{$br-name} {
        margin-left: 0;
      }
    }
  }
}

// row
.#{$row-prefix-class} {
  display: flex;
  flex-wrap: wrap;

  @each $name, $size in $breakpoint-list {
    @include breakpoint-up($name, $size) {
      $br-name: breakpoint-infix($name);

      &-#{$row-equal-height-class}#{$br-name} {
        > [class*='#{$row-column-prefix-class}'] > * {
          height: 100%;
        }
      }

      @each $spacing, $value in $spacing-list {
        &-#{$row-gap-class}-#{$spacing}#{$br-name} {
          @if ($spacing == 0) {
            margin-left: 0;
            > [class*='#{$row-column-prefix-class}'] {
              padding-left: 0;
              padding-bottom: 0;
            }
          } @else {
            margin-left: calc(var(--spacing-#{$spacing}) * -1);
            > [class*='#{$row-column-prefix-class}'] {
              padding-left: var(--spacing-#{$spacing});
              padding-bottom: var(--spacing-#{$spacing});
            }
          }
        }

        &-#{$row-gap-class}-#{$direction-horizontal-class}-#{$spacing}#{$br-name} {
          @if ($spacing == 0) {
            margin-left: 0;
            > [class*='#{$row-column-prefix-class}'] {
              padding-left: 0;
            }
          } @else {
            margin-left: calc(var(--spacing-#{$spacing}) * -1);
            > [class*='#{$row-column-prefix-class}'] {
              padding-left: var(--spacing-#{$spacing});
            }
          }
        }

        &-#{$row-gap-class}-#{$direction-vertical-class}-#{$spacing}#{$br-name} {
          @if ($spacing == 0) {
            > [class*='#{$row-column-prefix-class}'] {
              padding-bottom: 0;
            }
          } @else {
            > [class*='#{$row-column-prefix-class}'] {
              padding-bottom: var(--spacing-#{$spacing});
            }
          }
        }
      }

      @for $i from 1 through $row-column-count {
        &-#{$row-columns-class}-#{$i}#{$br-name} {
          > [class*='#{$row-column-prefix-class}'] {
            flex-basis: calc(100% / #{$i});
            max-width: calc(100% / #{$i});
          }
        }
      }
    }
  }
}
