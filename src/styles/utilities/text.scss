.#{$text-prefix-class} {
  @each $name, $size in $breakpoint-list {
    @include breakpoint-up($name, $size) {
      $br-name: breakpoint-infix($name);
      &-#{$direction-left-class}#{$br-name} {text-align: left;}
      &-#{$direction-right-class}#{$br-name} {text-align: right;}
      &-#{$direction-center-class}#{$br-name} {text-align: center;}
      &-#{$direction-start-class}#{$br-name} {text-align: start;}
      &-#{$direction-end-class}#{$br-name} {text-align: end;}
      &-#{$text-justify-class}#{$br-name} {
        text-align: justify;
        -moz-text-align-last: justify;
        text-align-last: justify;
      }
      &-#{$text-truncate-class}#{$br-name} {
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
      }
      &-#{$text-truncate-reset-class}#{$br-name} {
        overflow: visible;
        text-overflow: clip;
        white-space: normal;
      }
    }
  }

  @each $color, $value in $color-list {
    &-#{$color} {color: #{$value}; color: rgba(var(--color-#{$color}), var(--text-opacity));}
    @include apply-states($color) {color: #{$value}; color: rgba(var(--color-#{$color}), var(--text-opacity));}
  }

  @include apply-other-props(color);

  @each $key, $value in $opacity-list {
    &-#{$opacity-class}-#{$key} {--text-opacity: #{$value};}
  }
}

.#{$placeholder-class} {
  @each $color, $value in $color-list {
    &-#{$color}::placeholder {color: #{$value}; color: rgba(var(--color-#{$color}), var(--placeholder-opacity));}
  }
  @each $key, $value in $opacity-list {
    &-#{$opacity-class}-#{$key} {--placeholder-opacity: #{$value};}
  }
}
